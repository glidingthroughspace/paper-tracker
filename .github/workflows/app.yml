# This workflow will run the flutter app's tests and build the APK

name: App
on:
  pull_request:
  push:
    paths:
      - app/**

jobs:
  test:
    name: Test App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Test and Build
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: flutter test
        working-directory: ./app

  buildAPK:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Build
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: flutter build apk --release --split-per-abi
        working-directory: ./app
      # Attach the APK as an artifact to each build (so it can easily be viewed for each build)
      # We're using v2-preview of the action, since it allows to upload single files
      - name: Upload artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: app
          path: "app/build/app/outputs/apk/release/*.apk"

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: buildAPK
    steps:
      - name: Download artifact
        id: download_artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/download-artifact@v2-preview
        with:
          name: app
      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          tag_name: ${{ github.ref }}
          replacesArtifacts: false
          artifacts: "**/*.apk"
          artifactContentType: "application/vnd.android.package-archive"
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, 'nightly') || contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}

