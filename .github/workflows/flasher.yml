# This workflow will build the flasher for windows and linux and attach it to releases
#
name: Flasher
on:
  pull_request:
  push:
    paths:
      - hardware/flasher/**

defaults:
  run:
    working-directory: hardware/flasher
    shell: bash

jobs:
  build-linux:
    name: Build flasher for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install python tools
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Build
        run: make
      - name: Pack zip
        run: make zip
      - name: Rename zip
        run: mv dist.zip flasher-${{ runner.os }}.zip
      - name: Upload artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: flasher
          path: "hardware/flasher/flasher*.zip"
  build-windows:
    name: Build flasher for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install python tools
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Build
        run: make
      - name: Pack zip
        run: cd dist && 7za.exe a -tzip ../dist.zip flasher* && cd .. && 7za.exe a flasher/dist.zip firmware
      - name: Rename zip
        run: mv dist.zip flasher-${{ runner.os }}.zip
      - name: Upload artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: flasher
          path: "hardware/flasher/flasher*.zip"

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ build-linux, build-windows ]
    steps:
      - name: Download artifact
        id: download_artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/download-artifact@v2-preview
        with:
          name: flasher
      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1.6.1
        with:
          allowUpdates: true
          tag_name: ${{ github.ref }}
          replacesArtifacts: false
          artifacts: "**/flasher*.zip"
          artifactContentType: "application/zip"
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, 'nightly') || contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          token: ${{ secrets.GITHUB_TOKEN }}

