name: Backend
on:
  pull_request:
  push:
    paths:
      - server/**

jobs:
  test:
    name: Test for Go version ${{ matrix.golang }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Go ${{ matrix.golang }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.golang }}
    - name: Get dependencies
      run: go get -v -t -d ./...
      working-directory: ./server
    - name: Test
      run: make test
      working-directory: ./server
    strategy:
      matrix:
        golang: [ '1.12', '1.13', '1.14' ]

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Build
        run: make
        working-directory: ./server
      - name: Upload artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: server
          path: server/paper-tracker

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ endsWith(github.ref, '-rc') || endsWith(github.ref, 'nightly') }}
      - name: Download artifact
        id: download_artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/download-artifact@v2-preview
        with:
          name: server
      - name: Upload Release Asset
        id: upload-release-asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: server/paper-tracker
          asset_name: paper-tracker-linux-x86_64





